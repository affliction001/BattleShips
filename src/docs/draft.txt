0 -> 0  1  2  3  4  5  6  7  8  9
1 -> 0  1  2  3  4  5  6  7  8  9
2 -> 0  1  2  3  4  5  6  7  8  9
3 -> 0  1  2  3  4  5  6  7  8  9
4 -> 0  1  2  3  4  5  6  7  8  9
5 -> 0  1  2  3  4  5  6  7  8  9
6 -> 0  1  2  3  4  5  6  7  8  9
7 -> 0  1  2  3  4  5  6  7  8  9
8 -> 0  1  2  3  4  5  6  7  8  9
9 -> 0  1  2  3  4  5  6  7  8  9


#
# Описание логики для хода компьютера.
# Проектирую метод работы для AI
#

Создаем массив обьектов,который будет хранить координаты клеток для следующего выстрела в случае ранения.

Если массив с координатами пустой генерируем х и у координаты для выстрела, случайно.
Иначе вызываем метод шаг компьютера с одинм из наборов координат из массива, при этом удалив этот обьект с координатами из массива.
  Создаем id для поля в окне браузера.
  Проверяем ячейку поля по id.
    Если цвет ячейки серый значит попал
      Уменьшаем жизнь игрока на 1.
      Проверяем убит или ранен.
        Если ранен
          Закрашиваем чеыре клетки, расположенных по диагонали от искомой, в {синий} цвет.
          Проверяем четыре клетки расположенные перпендикулярно искомой.
            Если цвет проверяемых клеток серый или белый, добавляем в массив обьектов с возможными координатами.
            Вызываем метод ход компьютера.
        Если убит, то закрашиваем поле вокруг корабля в {синий} цвет, а сам корабль в красный с прозрачностью 0.99.
          Зачищаем массив обьектов.
          Проверяем жизнь игрока
            Если меньше либо ранво нулю то завершаем игру и выводим информацию - игрок проиграл.
            Иначе снова вызываем метод шаг компьютера.
    Если цвет ячейки {синий} или красный с прозрачностью 0.99 значит по этой ячейке уже стреляли до этого
      Снова вызываем метод шаг компьютера.
    Иначе - промах
      * Закрашиваем клетку в синий цвет.
      Передаем ход игроку.

!!! Забыл про отображение промаха в поле игрока при выстреле компьютера.
!!! Попробую поменять прозрачный красный на синий!
